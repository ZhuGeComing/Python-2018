install.packages('nycflights13')
install.packages('dplyr')
install.packages('ggvis')
install.packages('lubridate')
library(nycflights13)
library(dplyr)
library(ggvis)
library(lubridate)
# Summarize and join daily flight and weather data
daily <- flights %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(
delay = mean(dep_delay, na.rm = TRUE),
cancelled = mean(is.na(dep_delay))
)
daily_weather <- weather %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(
temp = mean(temp, na.rm = TRUE),
wind = mean(wind_speed, na.rm = TRUE),
precip = sum(precip, na.rm = TRUE)
)
both <- daily %>%
inner_join(daily_weather) %>%
ungroup() %>%
mutate(date = as.Date(ISOdate(year, month, day)))
# Scatter plot with smoothing line
both %>%
ggvis(x = ~temp, y = ~delay) %>%
layer_points() %>%
layer_smooths()
# Mapping a variable to fill color
both %>%
ggvis(~temp, ~delay, fill = ~precip) %>%
layer_points()
# Histogram
both %>% ggvis(~delay) %>% layer_histograms()
# Histogram
both %>% ggvis(~delay) %>% layer_histograms()
both %>% ggvis(~delay)
# Reactive computation parameters
both %>%
ggvis(~delay) %>%
layer_histograms(binwidth = input_slider(1, 10, value = 5))
library(readr)
dataset <- read_delim("Python/123.csv", "\t",
escape_double = FALSE, trim_ws = TRUE)
View(dataset)
str(dataset)
library(dplyr)
library(data.table)
install.packages('data.table')
install.packages('shiny')
install.packages('ggplot')
install.packages('ggplot')
install.packages('ggplot2')
sample(100, 10)
iris
library(ggplot2)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width))
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width))+geom_bar()
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width))+geom_boxplot()
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width))+geom_point()
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width))+geom_point()+
theme_light()
install.packages('shiny')
install.packages('data.table')
library(data.table)
setwd("~/Python")
fread('iris_training.csv')
x = fread('iris_training.csv')
View(x)
row.names(x)
paste('abcde', '')
paste('abcde', ' ')
paste('a', 1:5)
paste('a', sep = '', 1:5)
names = paste('a', sep = '', 1:5)
colnames()
colnames(x) = names
library(ggplot2)
x>%>
x %>%
ggplot(,aes(a1, a2))
library(dplyr)
x %>%
ggplot(,aes(a1, a2))
x %>%
a1
x %>%
group_by(a1)
x %>%
group_by(a5)
x %>%
group_by(a5) %>%
arrange(a1)
y = x %>%
group_by(a5) %>%
arrange(a1)
View(y)
x%>%
select(a1,a2)
factor(x$a5)
y = factor(x$a5)
y == 2
